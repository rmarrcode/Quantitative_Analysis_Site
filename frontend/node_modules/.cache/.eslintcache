[{"/home/ubuntu/Quantitative_Analysis_Site/frontend/src/index.js":"1","/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/auth/useAuth.js":"2","/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/auth/signin.js":"3","/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/console/console.js":"4","/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/constants.js":"5","/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/auth/useLocalStorage.js":"6"},{"size":767,"mtime":1672922202371,"results":"7","hashOfConfig":"8"},{"size":973,"mtime":1672922202371,"results":"9","hashOfConfig":"8"},{"size":1836,"mtime":1672922202371,"results":"10","hashOfConfig":"8"},{"size":4796,"mtime":1673745912868,"results":"11","hashOfConfig":"8"},{"size":36,"mtime":1673745908504,"results":"12","hashOfConfig":"8"},{"size":667,"mtime":1672922202371,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"107vkxp",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/Quantitative_Analysis_Site/frontend/src/index.js",[],[],"/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/auth/useAuth.js",["35"],[],"import { createContext, useContext, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useLocalStorage(\"user\", null);\n  const navigate = useNavigate();\n\n  // call this function when you want to authenticate the user\n  const signinFrontend = async (data) => {\n    setUser(data);\n    navigate(\"/console\"); //  Change this if deploy is not the main page they go to.\n  };\n\n  // call this function to sign out logged in user\n  const signoutFrontend = () => {\n    setUser(null);\n    navigate(\"/\", { replace: true });\n  };\n\n  const value = useMemo(\n    () => ({\n      user,\n      signinFrontend,\n      signoutFrontend\n    }),\n    [user]\n  );\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n","/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/auth/signin.js",["36"],[],"import { React } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from './useAuth';\nimport Button from 'react-bootstrap/Button';\n\nimport Cookies from 'js-cookie';\n\nimport '../matador_components.css';\n\nconst SignIn = () => {\n\n  let navigate = useNavigate();\n\n  const { signinFrontend } = useAuth();\n  \n  const headers = new Headers({\n    \"X-CSRFToken\": Cookies.get('csrftoken')\n  }); \n\n  const handleSignin = async (event) => {\n    // Prevent the form from doing the default html garbage\n    event.preventDefault();\n    // Get the form data and send signin req to server.\n    const formData = new FormData(event.target);\n    const response = await fetch(\"api/signinUser\",\n      {\n        method: \"POST\",\n        headers: headers,\n        body: formData\n      });\n\n    const apiResponse  = await response.json();\n\n    console.log(\"Response:\", apiResponse)\n    // Check if the login succeeded\n    if (apiResponse.auth) {\n      signinFrontend({\n        username: formData.get(\"username\"),\n        password: formData.get(\"password\")\n      });\n    }\n    \n  };\n\n  return (\n      <div className='authform'>\n      <h1>Quantitative-Analysis-Site</h1>\n      <p>Sign in to Your Account</p>\n      <form onSubmit={handleSignin}>\n\n        <div class=\"form-group inputWrapper\">\n          <label for=\"username\">Username</label>\n          <input class=\"form-control\" id=\"username\" name=\"username\" type=\"text\" required />\n        </div>\n\n        <div class=\"form-group inputWrapper\">\n          <label for=\"password1\">Password</label>\n          <input class=\"form-control\" id=\"password\" name=\"password\" type=\"password\" required />\n        </div>\n        <Button style={{\"margin-top\": \"10px\"}} type=\"submit\" variant=\"outline-dark\">\n          Sign In\n        </Button>\n      </form>\n      </div>\n  );\n}\n\nexport default SignIn;","/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/console/console.js",["37","38","39","40","41","42","43","44","45","46"],[],"import React, { useState, useEffect, Component } from \"react\";\n\nimport './console.css';\nimport * as constants from  '../constants.js'\n\nfunction Console() {\n\n  const [allBranches, setAllBranches] = useState([])\n  const [message, setMessage] = useState('');\n  const [pastEvents, setPastEvents] = useState([]);\n  const [formBranch, setFormBranch] = useState('');\n  const [formAlg, setFormAlg] = useState('');\n  const [formTickers, setFormTickers] = useState('');\n  const [formStartDate, setFormStartDate] = useState('');\n  const [formEndDate, setFormEndDate] = useState('');\n  const [experimentData, setExperimentData] = useState([])\n\n  useEffect(() => {\n\n    const updateExperimentData = (newExpData) => {\n      var found = false\n      const updateditems = experimentData.map((item) => {\n        console.log(item.exp_id)\n        console.log(newExpData.exp_id)\n        if (item.exp_id === newExpData.exp_id) {\n          found = true\n          console.log(found)\n          return { exp_id: item.exp_id, returns: newExpData.returns };\n        }\n        return item;\n      });\n      if (!found) {\n        console.log(newExpData)\n        setExperimentData([...experimentData, newExpData])\n      }\n      else {\n        setExperimentData(updateditems);\n      }\n    };\n\n    const sockUrl = 'ws://' + constants.SITE_IP + ':8000/ws/expstate/';\n    const updatesSocket = new WebSocket(sockUrl);\n    updatesSocket.onopen = () => {\n      console.log(\"socket is opened\")                            \n    }\n    updatesSocket.onmessage = function(e) {\n        const data = JSON.parse(e.data)['data'];\n        updateExperimentData(data)\n    }; \n    updatesSocket.onclose = function(e) {\n        console.error('Chat socket closed unexpectedly');\n    };\n  }, [experimentData, setExperimentData]);\n\n  const getAllBranches = async event => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"api/getbranches\", requestOptions)\n      .then(response => response.text())\n      .then(result => setAllBranches(JSON.parse(result)['ec2 data']))\n      .catch(error => console.log('error', error))\n  }\n\n  async function deploy() {\n    var data = {\n      'op': 'deploy',\n      'branch': formBranch,\n      'alg': formAlg,\n      'tickers': formTickers,\n      'startDate': formStartDate,\n      'endDate': formEndDate,\n    }\n    var requestOptions = {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n      redirect: 'follow'\n    };\n    fetch(\"api/deploy\", requestOptions)\n      .then(response => response.text())\n      .then(result => setPastEvents(JSON.parse(result).data))\n      .catch(error => console.log('error', error))\n  };\n\n  // async function getExperimentData(id) {\n  //   var raw = JSON.stringify({\n  //     \"op\": \"getexperimentdata\",\n  //     \"id\": id\n  //   });\n  //   var requestOptions = {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: raw,\n  //     redirect: 'follow'\n  //   };\n    \n  //   fetch(\"api/getExperimentData\", requestOptions)\n  //     .then(response => response.text())\n  //     .then(result => updateExperimentData(id, result))\n  //     .catch(error => console.log('error', error));\n  // }\n\n  const makeTable = array => {\n    var table = document.createElement('table');\n    for (var i = 0; i < array.length; i++) {\n        var row = document.createElement('tr');\n        row.appendChild(array[i]);\n        table.appendChild(row);\n    }\n    return table;\n  }\n  console.log(experimentData)\n  return (\n    <div class=\"row\">\n      <div class=\"column\">\n        <h1>Stock Selector</h1>\n        <form>\n          <label>\n            alg:\n            <select name=\"alg\" id=\"alg\" form=\"alg\" onChange={x => setFormAlg(x.target.value)}>\n              <option value=\"\">-----</option>\n              <option value=\"JAXSLAC\">JAXSLAC</option>\n              <option value=\"AEJAXSAC\">AEJAXSAC</option>\n              <option value=\"VAEJAXSAC\">VAEJAXSAC</option>\n            </select>\n          </label>\n          <br/>\n          <label>\n            tickers:\n            <input \n              type=\"text\"\n              value={formTickers}\n              onChange={(e) => setFormTickers(e.target.value)}\n            />\n          </label>   \n          <br/>\n        </form>\n        <button onClick={deploy}>Submit Now</button>  \n      </div>\n        \n      <div class=\"column\">\n        <h1>PAST EVENTS</h1>\n        {experimentData.map(element => {\n          return (\n            <div>\n              <tr><td>\n                <p>{element.exp_id}</p> \n                <p>{JSON.stringify(element.returns)}</p>\n              </td></tr>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n    \n  );\n  \n}\n\nexport default Console;","/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/constants.js",[],[],"/home/ubuntu/Quantitative_Analysis_Site/frontend/src/components/auth/useLocalStorage.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":28,"column":5,"nodeType":"49","endLine":28,"endColumn":11,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":7,"nodeType":"53","messageId":"54","endLine":12,"endColumn":15},{"ruleId":"51","severity":1,"message":"55","line":1,"column":38,"nodeType":"53","messageId":"54","endLine":1,"endColumn":47},{"ruleId":"51","severity":1,"message":"56","line":8,"column":10,"nodeType":"53","messageId":"54","endLine":8,"endColumn":21},{"ruleId":"51","severity":1,"message":"57","line":9,"column":10,"nodeType":"53","messageId":"54","endLine":9,"endColumn":17},{"ruleId":"51","severity":1,"message":"58","line":9,"column":19,"nodeType":"53","messageId":"54","endLine":9,"endColumn":29},{"ruleId":"51","severity":1,"message":"59","line":10,"column":10,"nodeType":"53","messageId":"54","endLine":10,"endColumn":20},{"ruleId":"51","severity":1,"message":"60","line":11,"column":22,"nodeType":"53","messageId":"54","endLine":11,"endColumn":35},{"ruleId":"51","severity":1,"message":"61","line":14,"column":25,"nodeType":"53","messageId":"54","endLine":14,"endColumn":41},{"ruleId":"51","severity":1,"message":"62","line":15,"column":23,"nodeType":"53","messageId":"54","endLine":15,"endColumn":37},{"ruleId":"51","severity":1,"message":"63","line":55,"column":9,"nodeType":"53","messageId":"54","endLine":55,"endColumn":23},{"ruleId":"51","severity":1,"message":"64","line":109,"column":9,"nodeType":"53","messageId":"54","endLine":109,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'signinFrontend' and 'signoutFrontend'. Either include them or remove the dependency array.","ArrayExpression",["65"],"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'allBranches' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'pastEvents' is assigned a value but never used.","'setFormBranch' is assigned a value but never used.","'setFormStartDate' is assigned a value but never used.","'setFormEndDate' is assigned a value but never used.","'getAllBranches' is assigned a value but never used.","'makeTable' is assigned a value but never used.",{"desc":"66","fix":"67"},"Update the dependencies array to be: [signinFrontend, signoutFrontend, user]",{"range":"68","text":"69"},[809,815],"[signinFrontend, signoutFrontend, user]"]