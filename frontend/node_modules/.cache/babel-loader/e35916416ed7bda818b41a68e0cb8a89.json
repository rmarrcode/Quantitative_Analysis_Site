{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useState,useEffect}from\"react\";import{usePlaidLink}from\"react-plaid-link\";//hard code this in for now until we set up login\nimport Cookies from\"js-cookie\";// const ALPACA_ACCOUNT_ID = \"5cb7c9de-a51c-4ed8-97c2-d385c9d63f4a\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";var SimplePlaidLink=function SimplePlaidLink(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];// Create the header\nvar headers=new Headers({\"X-CSRFToken\":Cookies.get('csrftoken')});// get link_token from your server when component mounts\nuseEffect(function(){var createLinkToken=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,_yield$response$json,link_token;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('api/create_link_token',{method:'POST',credentials:'include',headers:headers});case 2:response=_context.sent;_context.next=5;return response.json();case 5:_yield$response$json=_context.sent;link_token=_yield$response$json.link_token;setToken(link_token);case 8:case\"end\":return _context.stop();}}},_callee);}));return function createLinkToken(){return _ref.apply(this,arguments);};}();createLinkToken();},[]);var onSuccess=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(publicToken,metadata){var public_token,account_id,str,response,_yield$response$json2,processor_token;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// send public_token to your server\n// https://plaid.com/docs/api/tokens/#token-exchange-flow\npublic_token=publicToken;account_id=metadata.accounts[0].id;str=JSON.stringify({public_token:public_token,account_id:account_id});_context2.next=5;return fetch('api/processor_token_create',{method:\"POST\",credentials:'include',headers:headers,body:str});case 5:response=_context2.sent;_context2.next=8;return response.json();case 8:_yield$response$json2=_context2.sent;processor_token=_yield$response$json2.processor_token;createACH(processor_token);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}(),[]);var _usePlaidLink=usePlaidLink({token:token,onSuccess:onSuccess}),open=_usePlaidLink.open,ready=_usePlaidLink.ready;var createACH=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(processor_token){var str,response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:str=JSON.stringify({// alpaca_id: ALPACA_ACCOUNT_ID,\nprocessor_token:processor_token});_context3.next=3;return fetch('api/ach',{method:\"POST\",credentials:'include',headers:headers,body:str});case 3:response=_context3.sent;case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function createACH(_x3){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return open();},disabled:!ready,children:\"Connect a bank account\"});};export default SimplePlaidLink;","map":{"version":3,"names":["React","useCallback","useState","useEffect","usePlaidLink","Cookies","SimplePlaidLink","token","setToken","headers","Headers","get","createLinkToken","fetch","method","credentials","response","json","link_token","onSuccess","publicToken","metadata","public_token","account_id","accounts","id","str","JSON","stringify","body","processor_token","createACH","open","ready"],"sources":["/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/src/new_components/transfer/SimplePlaidLink.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\n//hard code this in for now until we set up login\nimport Cookies from \"js-cookie\";\n\n\n// const ALPACA_ACCOUNT_ID = \"5cb7c9de-a51c-4ed8-97c2-d385c9d63f4a\";\n\nconst SimplePlaidLink = () => {\n\n    const [token, setToken] = useState(null);\n\n    // Create the header\n    const headers = new Headers({\n        \"X-CSRFToken\": Cookies.get('csrftoken')\n    }); \n\n    // get link_token from your server when component mounts\n    useEffect(() => {\n        const createLinkToken = async () => {\n            // Send the request\n            const response = await fetch('api/create_link_token',\n                {\n                    method: 'POST',\n                    credentials: 'include',\n                    headers: headers\n                });\n            // Set the link token appropriately.\n            const { link_token } = await response.json();\n            setToken(link_token);\n        };\n        createLinkToken();\n    }, []);\n\n    const onSuccess = useCallback(async (publicToken, metadata) => {\n            // send public_token to your server\n            // https://plaid.com/docs/api/tokens/#token-exchange-flow\n            var public_token = publicToken;\n            var account_id = metadata.accounts[0].id;\n            const str = JSON.stringify({\n                public_token: public_token,\n                account_id: account_id,\n            })\n            const response = await fetch('api/processor_token_create',\n                {\n                    method: \"POST\", \n                    credentials: 'include',\n                    headers: headers,\n                    body: str\n                });\n            const { processor_token } = await response.json();\n            createACH(processor_token);\n    }, []);      \n\n    const { open, ready } = usePlaidLink({\n        token,\n        onSuccess,\n    });\n\n\n    const createACH = async (processor_token) => {\n        const str = JSON.stringify({\n            // alpaca_id: ALPACA_ACCOUNT_ID,\n            processor_token: processor_token,\n        })\n        const response = await fetch('api/ach',\n            {\n                method: \"POST\", \n                credentials: 'include',\n                headers: headers,\n                body: str\n            }\n        )\n    };\n\n    return (\n        <button onClick={() => open()} disabled={!ready}>\n            Connect a bank account\n        </button>\n    );\n};\n\nexport default SimplePlaidLink;"],"mappings":"miBAAA,MAAOA,MAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,CAAuCC,SAAvC,KAAwD,OAAxD,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA;AACA,MAAOC,QAAP,KAAoB,WAApB,CAGA;2CAEA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,EAAM,CAE1B,cAA0BJ,QAAQ,CAAC,IAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eAEA;AACA,GAAMC,QAAO,CAAG,GAAIC,QAAJ,CAAY,CACxB,cAAeL,OAAO,CAACM,GAAR,CAAY,WAAZ,CADS,CAAZ,CAAhB,CAIA;AACAR,SAAS,CAAC,UAAM,CACZ,GAAMS,gBAAe,4FAAG,wMAEGC,MAAK,CAAC,uBAAD,CACxB,CACIC,MAAM,CAAE,MADZ,CAEIC,WAAW,CAAE,SAFjB,CAGIN,OAAO,CAAEA,OAHb,CADwB,CAFR,QAEdO,QAFc,qCASSA,SAAQ,CAACC,IAAT,EATT,2CASZC,UATY,sBASZA,UATY,CAUpBV,QAAQ,CAACU,UAAD,CAAR,CAVoB,sDAAH,kBAAfN,gBAAe,0CAArB,CAYAA,eAAe,GAClB,CAdQ,CAcN,EAdM,CAAT,CAgBA,GAAMO,UAAS,CAAGlB,WAAW,6FAAC,kBAAOmB,WAAP,CAAoBC,QAApB,uMACtB;AACA;AACIC,YAHkB,CAGHF,WAHG,CAIlBG,UAJkB,CAILF,QAAQ,CAACG,QAAT,CAAkB,CAAlB,EAAqBC,EAJhB,CAKhBC,GALgB,CAKVC,IAAI,CAACC,SAAL,CAAe,CACvBN,YAAY,CAAEA,YADS,CAEvBC,UAAU,CAAEA,UAFW,CAAf,CALU,wBASCV,MAAK,CAAC,4BAAD,CACxB,CACIC,MAAM,CAAE,MADZ,CAEIC,WAAW,CAAE,SAFjB,CAGIN,OAAO,CAAEA,OAHb,CAIIoB,IAAI,CAAEH,GAJV,CADwB,CATN,QAShBV,QATgB,uCAgBYA,SAAQ,CAACC,IAAT,EAhBZ,6CAgBda,eAhBc,uBAgBdA,eAhBc,CAiBtBC,SAAS,CAACD,eAAD,CAAT,CAjBsB,yDAAD,oEAkB1B,EAlB0B,CAA7B,CAoBA,kBAAwB1B,YAAY,CAAC,CACjCG,KAAK,CAALA,KADiC,CAEjCY,SAAS,CAATA,SAFiC,CAAD,CAApC,CAAQa,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAMA,GAAMF,UAAS,6FAAG,kBAAOD,eAAP,yIACRJ,GADQ,CACFC,IAAI,CAACC,SAAL,CAAe,CACvB;AACAE,eAAe,CAAEA,eAFM,CAAf,CADE,wBAKSjB,MAAK,CAAC,SAAD,CACxB,CACIC,MAAM,CAAE,MADZ,CAEIC,WAAW,CAAE,SAFjB,CAGIN,OAAO,CAAEA,OAHb,CAIIoB,IAAI,CAAEH,GAJV,CADwB,CALd,QAKRV,QALQ,wEAAH,kBAATe,UAAS,8CAAf,CAeA,mBACI,eAAQ,OAAO,CAAE,yBAAMC,KAAI,EAAV,EAAjB,CAA+B,QAAQ,CAAE,CAACC,KAA1C,oCADJ,CAKH,CAxED,CA0EA,cAAe3B,gBAAf"},"metadata":{},"sourceType":"module"}