{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nvar Voronoi = /*#__PURE__*/function () {\n  function Voronoi(delaunay) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 960, 500],\n        _ref2 = _slicedToArray(_ref, 4),\n        xmin = _ref2[0],\n        ymin = _ref2[1],\n        xmax = _ref2[2],\n        ymax = _ref2[3];\n\n    _classCallCheck(this, Voronoi);\n\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n\n    this._init();\n  }\n\n  _createClass(Voronoi, [{\n    key: \"update\",\n    value: function update() {\n      this.delaunay.update();\n\n      this._init();\n\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this$delaunay = this.delaunay,\n          points = _this$delaunay.points,\n          hull = _this$delaunay.hull,\n          triangles = _this$delaunay.triangles,\n          vectors = this.vectors; // Compute circumcenters.\n\n      var circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n\n      for (var i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n        var t1 = triangles[i] * 2;\n        var t2 = triangles[i + 1] * 2;\n        var t3 = triangles[i + 2] * 2;\n        var _x = points[t1];\n        var _y = points[t1 + 1];\n        var x2 = points[t2];\n        var y2 = points[t2 + 1];\n        var x3 = points[t3];\n        var y3 = points[t3 + 1];\n        var dx = x2 - _x;\n        var dy = y2 - _y;\n        var ex = x3 - _x;\n        var ey = y3 - _y;\n        var bl = dx * dx + dy * dy;\n        var cl = ex * ex + ey * ey;\n        var ab = (dx * ey - dy * ex) * 2;\n\n        if (!ab) {\n          // degenerate case (collinear diagram)\n          x = (_x + x3) / 2 - 1e8 * ey;\n          y = (_y + y3) / 2 + 1e8 * ex;\n        } else if (Math.abs(ab) < 1e-8) {\n          // almost equal points (degenerate triangle)\n          x = (_x + x3) / 2;\n          y = (_y + y3) / 2;\n        } else {\n          var d = 1 / ab;\n          x = _x + (ey * bl - dy * cl) * d;\n          y = _y + (dx * cl - ex * bl) * d;\n        }\n\n        circumcenters[j] = x;\n        circumcenters[j + 1] = y;\n      } // Compute exterior cell rays.\n\n\n      var h = hull[hull.length - 1];\n      var p0,\n          p1 = h * 4;\n      var x0,\n          x1 = points[2 * h];\n      var y0,\n          y1 = points[2 * h + 1];\n      vectors.fill(0);\n\n      for (var _i = 0; _i < hull.length; ++_i) {\n        h = hull[_i];\n        p0 = p1, x0 = x1, y0 = y1;\n        p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n        vectors[p0 + 2] = vectors[p1] = y0 - y1;\n        vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var _this$delaunay2 = this.delaunay,\n          halfedges = _this$delaunay2.halfedges,\n          inedges = _this$delaunay2.inedges,\n          hull = _this$delaunay2.hull,\n          circumcenters = this.circumcenters,\n          vectors = this.vectors;\n      if (hull.length <= 1) return null;\n\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = Math.floor(i / 3) * 2;\n        var tj = Math.floor(j / 3) * 2;\n        var xi = circumcenters[ti];\n        var yi = circumcenters[ti + 1];\n        var xj = circumcenters[tj];\n        var yj = circumcenters[tj + 1];\n\n        this._renderSegment(xi, yi, xj, yj, context);\n      }\n\n      var h0,\n          h1 = hull[hull.length - 1];\n\n      for (var _i2 = 0; _i2 < hull.length; ++_i2) {\n        h0 = h1, h1 = hull[_i2];\n        var t = Math.floor(inedges[h1] / 3) * 2;\n        var x = circumcenters[t];\n        var y = circumcenters[t + 1];\n        var v = h0 * 4;\n\n        var p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n\n        if (p) this._renderSegment(x, y, p[0], p[1], context);\n      }\n\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderBounds\",\n    value: function renderBounds(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderCell\",\n    value: function renderCell(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n\n      var points = this._clip(i);\n\n      if (points === null || !points.length) return;\n      context.moveTo(points[0], points[1]);\n      var n = points.length;\n\n      while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) {\n        n -= 2;\n      }\n\n      for (var _i3 = 2; _i3 < n; _i3 += 2) {\n        if (points[_i3] !== points[_i3 - 2] || points[_i3 + 1] !== points[_i3 - 1]) context.lineTo(points[_i3], points[_i3 + 1]);\n      }\n\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"cellPolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function cellPolygons() {\n      var points, i, n, cell;\n      return _regeneratorRuntime().wrap(function cellPolygons$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              points = this.delaunay.points;\n              i = 0, n = points.length / 2;\n\n            case 2:\n              if (!(i < n)) {\n                _context.next = 11;\n                break;\n              }\n\n              cell = this.cellPolygon(i);\n\n              if (!cell) {\n                _context.next = 8;\n                break;\n              }\n\n              cell.index = i;\n              _context.next = 8;\n              return cell;\n\n            case 8:\n              ++i;\n              _context.next = 2;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, cellPolygons, this);\n    })\n  }, {\n    key: \"cellPolygon\",\n    value: function cellPolygon(i) {\n      var polygon = new Polygon();\n      this.renderCell(i, polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"_renderSegment\",\n    value: function _renderSegment(x0, y0, x1, y1, context) {\n      var S;\n\n      var c0 = this._regioncode(x0, y0);\n\n      var c1 = this._regioncode(x1, y1);\n\n      if (c0 === 0 && c1 === 0) {\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n      } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n        context.moveTo(S[0], S[1]);\n        context.lineTo(S[2], S[3]);\n      }\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(i, x, y) {\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n      return this.delaunay._step(i, x, y) === i;\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function neighbors(i) {\n      var ci, _iterator, _step, j, cj, ai, li, aj, lj;\n\n      return _regeneratorRuntime().wrap(function neighbors$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ci = this._clip(i);\n\n              if (!ci) {\n                _context2.next = 33;\n                break;\n              }\n\n              _iterator = _createForOfIteratorHelper(this.delaunay.neighbors(i));\n              _context2.prev = 3;\n\n              _iterator.s();\n\n            case 5:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 25;\n                break;\n              }\n\n              j = _step.value;\n              cj = this._clip(j); // find the common edge\n\n              if (!cj) {\n                _context2.next = 23;\n                break;\n              }\n\n              ai = 0, li = ci.length;\n\n            case 10:\n              if (!(ai < li)) {\n                _context2.next = 23;\n                break;\n              }\n\n              aj = 0, lj = cj.length;\n\n            case 12:\n              if (!(aj < lj)) {\n                _context2.next = 20;\n                break;\n              }\n\n              if (!(ci[ai] == cj[aj] && ci[ai + 1] == cj[aj + 1] && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj])) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.next = 16;\n              return j;\n\n            case 16:\n              return _context2.abrupt(\"break\", 23);\n\n            case 17:\n              aj += 2;\n              _context2.next = 12;\n              break;\n\n            case 20:\n              ai += 2;\n              _context2.next = 10;\n              break;\n\n            case 23:\n              _context2.next = 5;\n              break;\n\n            case 25:\n              _context2.next = 30;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](3);\n\n              _iterator.e(_context2.t0);\n\n            case 30:\n              _context2.prev = 30;\n\n              _iterator.f();\n\n              return _context2.finish(30);\n\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, neighbors, this, [[3, 27, 30, 33]]);\n    })\n  }, {\n    key: \"_cell\",\n    value: function _cell(i) {\n      var circumcenters = this.circumcenters,\n          _this$delaunay3 = this.delaunay,\n          inedges = _this$delaunay3.inedges,\n          halfedges = _this$delaunay3.halfedges,\n          triangles = _this$delaunay3.triangles;\n      var e0 = inedges[i];\n      if (e0 === -1) return null; // coincident point\n\n      var points = [];\n      var e = e0;\n\n      do {\n        var t = Math.floor(e / 3);\n        points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n\n        e = halfedges[e];\n      } while (e !== e0 && e !== -1);\n\n      return points;\n    }\n  }, {\n    key: \"_clip\",\n    value: function _clip(i) {\n      // degenerate case (1 valid point: return the box)\n      if (i === 0 && this.delaunay.hull.length === 1) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n\n      var points = this._cell(i);\n\n      if (points === null) return null;\n      var V = this.vectors;\n      var v = i * 4;\n      return V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points);\n    }\n  }, {\n    key: \"_clipFinite\",\n    value: function _clipFinite(i, points) {\n      var n = points.length;\n      var P = null;\n      var x0,\n          y0,\n          x1 = points[n - 2],\n          y1 = points[n - 1];\n\n      var c0,\n          c1 = this._regioncode(x1, y1);\n\n      var e0, e1;\n\n      for (var j = 0; j < n; j += 2) {\n        x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n        c0 = c1, c1 = this._regioncode(x1, y1);\n\n        if (c0 === 0 && c1 === 0) {\n          e0 = e1, e1 = 0;\n          if (P) P.push(x1, y1);else P = [x1, y1];\n        } else {\n          var S = void 0,\n              sx0 = void 0,\n              sy0 = void 0,\n              sx1 = void 0,\n              sy1 = void 0;\n\n          if (c0 === 0) {\n            if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n            var _S = S;\n\n            var _S2 = _slicedToArray(_S, 4);\n\n            sx0 = _S2[0];\n            sy0 = _S2[1];\n            sx1 = _S2[2];\n            sy1 = _S2[3];\n          } else {\n            if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n            var _S3 = S;\n\n            var _S4 = _slicedToArray(_S3, 4);\n\n            sx1 = _S4[0];\n            sy1 = _S4[1];\n            sx0 = _S4[2];\n            sy0 = _S4[3];\n            e0 = e1, e1 = this._edgecode(sx0, sy0);\n            if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n            if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n          }\n\n          e0 = e1, e1 = this._edgecode(sx1, sy1);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n        }\n      }\n\n      if (P) {\n        e0 = e1, e1 = this._edgecode(P[0], P[1]);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n\n      return P;\n    }\n  }, {\n    key: \"_clipSegment\",\n    value: function _clipSegment(x0, y0, x1, y1, c0, c1) {\n      while (true) {\n        if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n        if (c0 & c1) return null;\n        var x = void 0,\n            y = void 0,\n            c = c0 || c1;\n        if (c & 8) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 4) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 2) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n        if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n      }\n    }\n  }, {\n    key: \"_clipInfinite\",\n    value: function _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n      var P = Array.from(points),\n          p;\n      if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n      if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n\n      if (P = this._clipFinite(i, P)) {\n        for (var j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n          c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n          if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n        }\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n      }\n\n      return P;\n    }\n  }, {\n    key: \"_edge\",\n    value: function _edge(i, e0, e1, P, j) {\n      while (e0 !== e1) {\n        var x = void 0,\n            y = void 0;\n\n        switch (e0) {\n          case 5:\n            e0 = 4;\n            continue;\n          // top-left\n\n          case 4:\n            e0 = 6, x = this.xmax, y = this.ymin;\n            break;\n          // top\n\n          case 6:\n            e0 = 2;\n            continue;\n          // top-right\n\n          case 2:\n            e0 = 10, x = this.xmax, y = this.ymax;\n            break;\n          // right\n\n          case 10:\n            e0 = 8;\n            continue;\n          // bottom-right\n\n          case 8:\n            e0 = 9, x = this.xmin, y = this.ymax;\n            break;\n          // bottom\n\n          case 9:\n            e0 = 1;\n            continue;\n          // bottom-left\n\n          case 1:\n            e0 = 5, x = this.xmin, y = this.ymin;\n            break;\n          // left\n        }\n\n        if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n          P.splice(j, 0, x, y), j += 2;\n        }\n      }\n\n      if (P.length > 4) {\n        for (var _i4 = 0; _i4 < P.length; _i4 += 2) {\n          var _j = (_i4 + 2) % P.length,\n              k = (_i4 + 4) % P.length;\n\n          if (P[_i4] === P[_j] && P[_j] === P[k] || P[_i4 + 1] === P[_j + 1] && P[_j + 1] === P[k + 1]) P.splice(_j, 2), _i4 -= 2;\n        }\n      }\n\n      return j;\n    }\n  }, {\n    key: \"_project\",\n    value: function _project(x0, y0, vx, vy) {\n      var t = Infinity,\n          c,\n          x,\n          y;\n\n      if (vy < 0) {\n        // top\n        if (y0 <= this.ymin) return null;\n        if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n      } else if (vy > 0) {\n        // bottom\n        if (y0 >= this.ymax) return null;\n        if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n      }\n\n      if (vx > 0) {\n        // right\n        if (x0 >= this.xmax) return null;\n        if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n      } else if (vx < 0) {\n        // left\n        if (x0 <= this.xmin) return null;\n        if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n      }\n\n      return [x, y];\n    }\n  }, {\n    key: \"_edgecode\",\n    value: function _edgecode(x, y) {\n      return (x === this.xmin ? 1 : x === this.xmax ? 2 : 0) | (y === this.ymin ? 4 : y === this.ymax ? 8 : 0);\n    }\n  }, {\n    key: \"_regioncode\",\n    value: function _regioncode(x, y) {\n      return (x < this.xmin ? 1 : x > this.xmax ? 2 : 0) | (y < this.ymin ? 4 : y > this.ymax ? 8 : 0);\n    }\n  }]);\n\n  return Voronoi;\n}();\n\nexport { Voronoi as default };","map":{"version":3,"names":["Path","Polygon","Voronoi","delaunay","xmin","ymin","xmax","ymax","Error","_circumcenters","Float64Array","points","length","vectors","_init","update","hull","triangles","circumcenters","subarray","i","j","n","x","y","t1","t2","t3","x1","y1","x2","y2","x3","y3","dx","dy","ex","ey","bl","cl","ab","Math","abs","d","h","p0","p1","x0","y0","fill","context","buffer","undefined","halfedges","inedges","ti","floor","tj","xi","yi","xj","yj","_renderSegment","h0","h1","t","v","p","_project","value","rect","_clip","moveTo","lineTo","closePath","cell","cellPolygon","index","polygon","renderCell","S","c0","_regioncode","c1","_clipSegment","_step","ci","neighbors","cj","ai","li","aj","lj","e0","e","push","_cell","V","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_edgecode","_edge","contains","c","vx0","vy0","vxn","vyn","Array","from","unshift","splice","k","vx","vy","Infinity"],"sources":["/Users/ryanmarr/Documents/Quantitative-Analysis-Site-ws/Quantitative_Analysis_Site/frontend/node_modules/d3-delaunay/src/voronoi.js"],"sourcesContent":["import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}